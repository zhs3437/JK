<apex:page lightningStylesheets="true" showHeader="false" sidebar="false" controller="RC_ProjectReminderController">

  <apex:slds />
  <!-- Necessary -->

  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:v-model="http://www.w3.org/1999/vue"
    xmlns:v-bind="http://www.w3.org/1999/vue" xmlns:v-on="http://www.w3.org/1999/vue">

  <head>
    <title>项目提示</title>

    <style>
      html {
        height: 119px
      }

      body {
        height: 100%
      }

      ::-webkit-inner-spin-button {
        visibility: hidden;
      }

      custom-text-transform {
        text-transform: capitalize;
      }

      [v-cloak] {
        display: none !important;
      }
    </style>
  </head>

  <body>

    <!-- REQUIRED SLDS WRAPPER -->
    <div id="app" class="slds" v-cloak="true" style="display: flex;height: 100%;align-items: center;">
      <!-- LOADING / Table -->
      <div class="slds-spinner_container" v-show="status.pageLoading" style="z-index: 1;">
        <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
          <span class="slds-assistive-text">加载</span>
          <div class="slds-spinner__dot-a"></div>
          <div class="slds-spinner__dot-b"></div>
        </div>
      </div>

      <div v-show="!priceApproveEnable && needPriceApprove && project.RecordType.DeveloperName == 'Project_Bid' && this.project.Stage__c != 'Won Bid'" style="width: 100%;">
        <div style="width: 100%;text-align: center;font-size: x-large;color: red;">
          本项目为投标项目，需先完成赢标阶段
        </div>
      </div>
      <div v-show="approvalStatus != 'Pending' && priceApproveEnable" style="width: 100%;">
        <!-- <div v-show="approvals.length > 0" style="width: 100%;text-align: center;font-size: x-large;color: red;">
          产品信息（数量，价格）, 账期信息（占比，天数）发生变更，需重新提交价格审批。
        </div> -->
        <div v-show="!status.paymentStatus" style="width: 100%;text-align: center;font-size: x-large;color: red;">
          提交价格审批，需账期信息达到 100 %
        </div>
        <div v-show="!status.itemStatus" style="width: 100%;text-align: center;font-size: x-large;color: red;">
          提交价格审批，需维护本项目产品
        </div>
        <div v-show="!!status.mdaStatus && status.mdaStatus.length > 0" style="width: 100%;text-align: center;font-size: x-large;color: red;">
          提交价格审批，需维护MDA ({{ status.mdaStatus.toString() }})
        </div>
        <div v-show="status.paymentStatus && status.itemStatus && status.mdaStatus.length == 0" style="width: 100%;text-align: center;font-size: x-large;color: green;">
          可以提交价格审批
        </div>
      </div>
      <div v-show="approvalStatus == 'Pending'" style="width: 100%;text-align: center;font-size: x-large;color: orange;">
        价格审批进行中
      </div>
      <div v-show="approvalStatus == 'Approved' && project.Stage__c != 'Closed Lost' && !needPriceApprove" style="width: 100%;text-align: center;font-size: x-large;color: green;">
        价格审批已通过
      </div>
    </div>
    <!-- / REQUIRED SLDS WRAPPER -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.QW, 'css/element-ui.css')}" /> -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.QW, 'css/sweetalert2.css')}" /> -->
    <apex:includeScript value="{!URLFOR($Resource.QW, 'js/vue.min.js')}" />
    <!-- <apex:includeScript value="{!URLFOR($Resource.QW, 'js/element-ui.js')}" /> -->
    <!-- <apex:includeScript value="{!URLFOR($Resource.QW, 'js/sweetalert2.js')}" /> -->
    <!-- <apex:includeScript value="{!URLFOR($Resource.QW, 'js/lodash.js')}" /> -->

    <script>
      var app = new Vue({
        el: '#app',
        data: () => {
          return {
            project: {},
            items: [],
            payments: [],
            approvals: [],
            status: {
              pageLoading: true,
              paymentStatus: false,
              itemStatus: false,
              mdaStatus: []
            }
          }
        },

        watch: {
          payments: function (newValue, oldValue) {
            if (newValue != null) {
              let temp = 0;
              newValue.forEach(payment => {
                temp += payment.Percentage__c;
              });
              if (temp == 100) this.status.paymentStatus = true;
            }
          },
          
          items: function (newValue, oldValue) {
            if (newValue != null) {
              let temp = 0;
              let temp_str = [];
              newValue.forEach(item => {
                temp += item.Power_W__c;
                if (!!item.IsMDAPass__c) return;
                // else if (temp_str != null) temp_str += ', ' + item.Name;
                else if (!temp_str.includes(item.Name)) temp_str.push(item.Name);
              });
              if (temp > 0) this.status.itemStatus = true;
              this.status.mdaStatus = temp_str;
            }
          }
        },

        computed: {
          priceApproveEnable: function () {
            if (this.project.RecordType == undefined) return false;
            // if (this.approvals.length > 0 && this.approvals[0].Status == 'Approved') return false;
            return (this.project.RecordType.DeveloperName == 'Project_Bid' && this.project.Stage__c == 'Won Bid') || 
                   (this.project.RecordType.DeveloperName != 'Project_Bid' && this.project.Stage__c == 'Prospecting');
          },

          needPriceApprove: function () {
            if (this.project.Stage__c == undefined) return false;
            return this.project.Stage__c != 'Price Approved' && 
                   this.project.Stage__c != 'Contract Signed' && 
                   this.project.Stage__c != 'Contract Negotiation' && 
                   this.project.Stage__c != 'Closed Lost';
          },

          approvalStatus: function () {
            if (this.approvals.length == 0) return false;
            return this.approvals[0].Status;
          }
        },

        mounted() {
          this.init();
        },

        methods: {
          init: function() {
            debugger;
            let that = this;
            RC_ProjectReminderController.init(JSON.stringify({id: getQueryVariable('id')}), function (result, event) {
              if (event.statusCode == 200) {
                that.project = result.project;
                that.items = result.items;
                that.payments = result.payments;
                that.approvals = result.approvals.sort(function(a, b){
                  if (a.CreatedDate < b.CreatedDate) return 1;
                  else return -1;
                });
              }
              that.status.pageLoading = false;
            });
          }
        }
      })
      
      /* Generate Instance Url */
      function instanceUrl(restUrl) {
        var elements = location.hostname.split('.'),
          instance = null,
          instanceUrl = null;
        if (elements.length === 4 && elements[1] === 'my') {
          instance = elements[0] + '.' + elements[1];
        } else if (elements.length === 3) {
          instance = elements[0];
        } else {
          instance = elements[1];
        }
        return 'https://' + instance + '.salesforce.com' + '/services/apexrest' + restUrl;
      }

      /* Get Url Params */
      function getQueryVariable(variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
          var pair = vars[i].split("=");
          if (pair[0] == variable) {
            return pair[1];
          }
        }
        return (false);
      }

      /* Redirect */
      function redirect(objId) {
        if (window.location.href.lastIndexOf(".lightning.force.com") == -1) {
          window.location.href = '/' + objId
        } else {
          if (sforce && sforce.one) {
            sforce.one.navigateToSObject(objId)
          }
        }
      }

      function success() {
        swal.fire({
          title: '成功',
          text: '提交成功',
          showCancelButton: false,
          showConfirmButton: true,
          type: 'success',
          confirmButtonText: '确认'
        })
      }
    </script>
  </body>

  </html>

</apex:page>