<apex:page tabStyle="Account" lightningStylesheets="true" showHeader="false" sidebar="false" controller="OpportunityLineItemGrossMarginHandler">

  <apex:slds />
  <!-- Necessary -->

  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:v-model="http://www.w3.org/1999/vue"
    xmlns:v-bind="http://www.w3.org/1999/vue" xmlns:v-on="http://www.w3.org/1999/vue">

  <head>
    <title>添加技术（产品）非标项</title>

    <style>
      thead th {
        min-width: 100px;
        font-weight: 400;
        color: #888888;
        position: sticky;
        top: 0px;
        background: #ffffff;
        z-index: 90;
        text-align: center;
        height: 46px;
      }

      .slds-scope .slds-input-has-icon_right .slds-input__icon,
      .slds-scope .slds-input-has-icon--right .slds-input__icon {
        right: 1.50rem;
      }
      ::-webkit-inner-spin-button {
        visibility: hidden;
      }

      custom-text-transform {
        text-transform: capitalize;
      }

      [v-cloak] {
        display: none !important;
      }
    </style>
  </head>

  <body>

    <!-- REQUIRED SLDS WRAPPER -->
    <div id="app" class="slds" v-cloak="true">
      <!-- LOADING / Table -->
      <div class="slds-spinner_container" v-show="status.loading">
        <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
          <span class="slds-assistive-text">加载</span>
          <div class="slds-spinner__dot-a"></div>
          <div class="slds-spinner__dot-b"></div>
        </div>
      </div>

      <!-- Search form -->
      <article class="slds-card">
        <div class="slds-card__header slds-grid">
          <header class="slds-media slds-media_center slds-has-flexi-truncate" style="height: 4rem;">
            <div class="slds-media__figure">
              <span class="slds-icon_container slds-icon-custom-custom67">
                <svg class="slds-icon" aria-hidden="true">
                  <use xlink:href="{!URLFOR($Asset.SLDS, '/icons/custom-sprite/svg/symbols.svg#custom67')}"></use>
                </svg>
              </span>
            </div>
            <div class="slds-media__body">
              <h2 class="slds-card__header-title">
                <span>添加技术（产品）非标项</span>
              </h2>
            </div>
            <div class="slds-grid" style="width: 60%;">
              <dl>
                <dt>第三方测试总额（USD）</dt>
                <dd>
                  <input type="number" 
                         class="slds-input" 
                         v-model.number="testCost"
                         v-on:change="handleTestCostChange" />
                </dd>
              </dl>
            </div>
            <div class="slds-no-flex">
              <button class="slds-button slds-button_neutral" v-on:click="back()">
                取消
              </button>
              <button class="slds-button slds-button_neutral" v-on:click="save()">
                保存
              </button>
              <button class="slds-button slds-button_neutral" v-bind:disabled="status.loading" v-on:click="save(true)">
                保存并退出
              </button>
            </div>
          </header>
        </div>
        <div class="slds-card__body">
          <!-- <div class="{!add(if(empty(v.errorMsg), 'slds-hide ', ''), 'slds-p-around_medium')}" style="color: red">
                        <aura:unescapedHtml value="{!v.errorMsg}" />
                    </div> -->
          <div class="slds-scrollable slds-is-relative slds-size_1-of-1" style="height: 31rem;">
            <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-no-row-hover">
              <thead>
                <tr class="slds-line-height_reset">
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">产品名称</div>
                  </th>
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">产品单价（USD/W）</div>
                  </th>
                  <!-- <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">预测毛利（USD/W）</div>
                  </th> -->
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">总瓦数（W）</div>
                  </th>
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">送功率（W）</div>
                  </th>
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">转库存（%）</div>
                  </th>
                  <th style="position: sticky;min-width: 240px;">
                    <div class="slds-truncate slds-text-align_center">特殊物料（可多选）</div>
                  </th>
                  <th style="position: sticky;">
                    <div class="slds-truncate slds-text-align_center">特殊物料成本（USD/W）</div>
                  </th>
                </tr>
              </thead>
              <tbody aura:id="tbody">
                <tr class="slds-hint-parent" v-for="(product, index) in products" v-bind:key="product.id" style="height: 40px;">
                  <td>
                    <div class="slds-truncate slds-text-align_center" v-bind:title="product.productName">
                      {{ product.productName }}
                    </div>
                  </td>
                  <td>
                    <div class="slds-truncate slds-text-align_center" v-bind:title="product.quantity">
                      {{ product.quantity }}
                    </div>
                  </td>
                  <!-- <td>
                    <div class="slds-truncate slds-text-align_center" v-bind:title="product.estimatedGrossMargin">
                      {{ product.estimatedGrossMargin }}
                    </div>
                  </td> -->
                  <td>
                    <div class="slds-truncate slds-text-align_center" v-bind:title="product.totalPower">
                      {{ product.totalPower }}
                    </div>
                  </td>
                  <td>
                    <div class="slds-form-element">
                      <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                        <div class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true" style="right: 1rem;">
                          W
                        </div>
                        <input type="number" 
                               class="slds-input" 
                               v-model.number="product.freePower" 
                               v-on:change="checkNA(product, 'freePower')"/>
                      </div>
                    </div>
                  </td>
                  <td>
                    <div class="slds-form-element">
                      <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                        <div class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true" style="right: 1rem;">
                          %
                        </div>
                        <input type="number" 
                               class="slds-input" 
                               v-model.number="product.transferStock"
                               v-on:change="checkNA(product, 'transferStock')"/>
                      </div>
                    </div>
                  </td>
                  <td>
                    <div class="slds-form-element">
                      <el-cascader
                        ref="cascader"
                        v-model="product.materials"
                        v-bind:options="options"
                        v-bind:props="props"
                        v-on:change="handleMaterialChange(product, index)"/>
                    </div>
                  </td>
                  <td>
                    <div class="slds-form-element">
                      <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                        <div class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true" style="right: 2.2rem;">
                          USD/W
                        </div>
                        <input type="number" 
                               class="slds-input" 
                               v-model.number="product.specialMaterialCostPerW" 
                               v-on:change="checkNA(product, 'specialMaterialCostPerW')"/>
                      </div>
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
            <!-- blank space -->
            <div style="height: 1rem;">

            </div>
          </div>
        </div>
        <footer class="slds-card__footer">

        </footer>
      </article>
    </div>
    <!-- / REQUIRED SLDS WRAPPER -->
    <apex:includeScript value="{!URLFOR($Resource.QW, 'js/vue.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.QW, 'js/element-ui.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.QW, 'css/element-ui.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.QW, 'css/sweetalert2.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.QW, 'js/sweetalert2.js')}" />

    <!-- <link href="https://unpkg.com/element-ui/lib/theme-chalk/index.css" rel="stylesheet" /> -->
    <!-- <script src="https://unpkg.com/element-ui/lib/index.js"></script> -->
    <!-- <link href="https://cdn.bootcdn.net/ajax/libs/limonte-sweetalert2/8.11.8/sweetalert2.css" rel="stylesheet" /> -->
    <!-- <script src="https://cdn.bootcdn.net/ajax/libs/limonte-sweetalert2/8.11.8/sweetalert2.js"></script> -->
    <!-- <apex:includeScript value="https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js" /> -->

    <script>
      var app = new Vue({
        el: '#app',
        data: () => {
          return {
            props: {multiple: true},
            testCost: null,
            products: [],
            status: {
              loading: false
            },
            options: [{
              value: '镀膜玻璃',
              label: '镀膜玻璃',
              children: [{
                value: '4.0MM Glass',
                label: '4.0MM Glass',
                price: 0.005
              },{
                value: 'Anti-Glare Glass - 信义/南玻',
                label: 'Anti-Glare Glass - 信义/南玻',
                price: 0.0015
              },{
                value: 'Anti-Glare Glass - 圣戈班',
                label: 'Anti-Glare Glass - 圣戈班',
                price: 0.08
              },{
                value: 'Anti-Soiling Glass',
                label: 'Anti-Soiling Glass',
                price: 0.0015
              }]
            },{
              value: '边框',
              label: '边框',
              children: [{
                value: '40MM B-side height for 60pcs product',
                label: '40MM B-side height for 60pcs product',
                price: 0.003
              },{
                value: 'Black Frame',
                label: 'Black Frame',
                price: 0.005
              }]
            },{
              value: '背板',
              label: '背板',
              children: [{
                value: 'TPT backsheet',
                label: 'TPT backsheet',
                price: 0.006
              },{
                value: 'Black backsheet',
                label: 'Black backsheet',
                price: 0.02
              }]
            },{
              value: '接线盒',
              label: '接线盒',
              children: [{
                value: 'Smart JB-MX Gen2',
                label: 'Smart JB-MX Gen2',
                price: 0.00
              },{
                value: 'Smart JB-MX Gen3',
                label: 'Smart JB-MX Gen3',
                price: 0.00
              },{
                value: 'Smart JB-RSD JB',
                label: 'Smart JB-RSD JB',
                price: 0.028
              }]
            },{
              value: '连接头',
              label: '连接头',
              children: [{
                value: 'MC4 connector',
                label: 'MC4 connector',
                price: 0.7
              },{
                value: 'MC4-EVO2 Connector',
                label: 'MC4-EVO2 Connector',
                price: 0.7
              }]
            }]
          }
        },
        mounted () {
            var that = this;
            that.init(getQueryVariable('id'));
        },
        methods: {
          init (id) {
            let that = this;
            OpportunityLineItemGrossMarginHandler.getProductByContractId(JSON.stringify({contractId: id}), function (result, event) {
              if (event.statusCode == 200) {
                debugger;
                [...result.data].forEach(item => {
                  let temps = [];
                  if (item.specialMaterialTypes == null) return;
                  item.specialMaterialTypes.split(';').forEach(type => {
                    if (item.specialMaterials == null) return;
                    item.specialMaterials.split(';').forEach(material => {
                      temps.push([type, material]);
                    });
                  });
                  item.materials = temps;
                });
                that.products = [...result.data];
                that.testCost = that.products[0].testCost;
              }
            });
          },

          save(exit) {
            let that = this;
            that.status.loading = true;
            
            [...that.products].forEach(product => {
              let temp;
              let temp_type;
              if (product.materials == null) return;
              product.materials.forEach(material => {
                if (temp_type === undefined) temp_type = material[0];
                else if (!temp_type.includes(material[0])) temp_type += ';' + material[0];
                if (temp === undefined) temp = material[1];
                else if (!temp.includes(material[1])) temp += ';' + material[1];
              });
              product.specialMaterialTypes = temp_type;
              product.specialMaterials = temp;
            });

            OpportunityLineItemGrossMarginHandler.setProductByContractId(JSON.stringify([...that.products]), function (result, event) {
              if (event.statusCode == 200) {
                success();
              }

              if (exit) {
                that.back();
              } else {
                that.status.loading = false;
              }
            });
          },

          handleMaterialChange (product, index) {
            debugger;
            let pricePerW = 0;
            this.$refs.cascader[index].getCheckedNodes(true).forEach(element => {
              if (element.parent.value != '连接头') pricePerW += element.data.price;
              else if (product.unitPower && product.unitPower != 0) pricePerW += element.data.price / product.unitPower;
            });
            product.specialMaterialCostPerW = pricePerW.toFixed(6);
          },

          checkNA (temp, name) {
            if (temp[name] == "") temp[name] = null;
          },

          handleTestCostChange () {
            let that = this;
            that.products.forEach(product => {
              if (that.testCost != '') product.testCost = that.testCost;
              else product.testCost = null;
            });
          },

          back() {
            this.status.loading = true;
            redirect(getQueryVariable('retId'))
          }
        }
      })

      /* Generate Instance Url */
      function instanceUrl(restUrl) {
        var elements = location.hostname.split('.'),
          instance = null,
          instanceUrl = null;
        if (elements.length === 4 && elements[1] === 'my') {
          instance = elements[0] + '.' + elements[1];
        } else if (elements.length === 3) {
          instance = elements[0];
        } else {
          instance = elements[1];
        }
        return 'https://' + instance + '.salesforce.com' + '/services/apexrest' + restUrl;
      }

      /* Get Url Params */
      function getQueryVariable(variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
          var pair = vars[i].split("=");
          if (pair[0] == variable) {
            return pair[1];
          }
        }
        return (false);
      }

      /* Redirect */
      function redirect(objId) {
        if (window.location.href.lastIndexOf(".lightning.force.com") == -1) {
          window.location.href = '/' + objId
        } else {
          if (sforce && sforce.one) {
            sforce.one.navigateToSObject(objId)
          }
        }
      }

      function success() {
        swal.fire({
          title: '成功',
          text: '提交成功',
          showCancelButton: false,
          showConfirmButton: true,
          type: 'success',
          confirmButtonText: '确认'
        })
      }
    </script>
  </body>

  </html>

</apex:page>