//Generated by wsdl2apex

public class AyncStockQuery {
    public class HTTPS_Port {
        public String endpoint_x = 'http://218.64.175.136:50100/XISOAPAdapter/MessageServlet?senderParty=&senderService=CRM&receiverParty=&receiverService=&interface=SI_CRM2ECC_StockQuery_Out&interfaceNamespace=urn%3Ajinkosolar.com%3Acrm%3Astock_query';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'urn:jinkosolar.com:ecc:stock_query', 'SyncStockQuery', 'urn:jinkosolar.com:crm:stock_query', 'AyncStockQuery'};
        public SyncStockQuery.DT_StockQuery_Response SI_CRM2ECC_StockQuery_Out(SyncStockQuery.I_QUERY_PARA_element I_QUERY_PARA) {
            SyncStockQuery.DT_StockQuery_Request request_x = new SyncStockQuery.DT_StockQuery_Request();
            request_x.I_QUERY_PARA = I_QUERY_PARA;
            SyncStockQuery.DT_StockQuery_Response response_x;
            Map<String, SyncStockQuery.DT_StockQuery_Response> response_map_x = new Map<String, SyncStockQuery.DT_StockQuery_Response>();
               this.inputHttpHeaders_x = new Map<String, String>(); 
            String baseStr = EncodingUtil.base64Encode(Blob.valueof('mes_wsuser:pip12345'));
            // String baseStr = EncodingUtil.base64Encode(Blob.valueof('mes_wsuser:pid12345'));
            this.inputHttpHeaders_x.put('Authorization', 'Basic '+ baseStr);
            response_map_x.put('response_x', response_x);
                      if(!Test.isRunningTest()){
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://sap.com/xi/WebService/soap1.1',
              'urn:jinkosolar.com:ecc:stock_query',
              'MT_StockQuery_Request',
              'urn:jinkosolar.com:ecc:stock_query',
              'MT_StockQuery_Response',
              'SyncStockQuery.DT_StockQuery_Response'}
            );
                      }
             integer num=1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
            num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;

        num=num+1;
        num=num+1;
        num=num+1;
        num=num+1;
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }
}